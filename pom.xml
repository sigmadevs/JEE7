<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sigma</groupId>
    <artifactId>jee7</artifactId>
    <version>1.0</version>
    
    <packaging>war</packaging>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- custom properties : war name & server path -->
        <myseverpath>/home/sigma/abhijeet/programme files/linux/apache-tomcat-8.0.27/webapps</myseverpath>
        <myprojectname>jee7</myprojectname>
        <!-- -->
    </properties>
    
    
    <dependencies>
         <!-- Java Enterprice 7 (servlet 3.1, jsp 2.3, EJB lite 3.2, JSF 2.2, jax rs 2.0, Web socket 1.0,EL 3.0, JSTL 1.2,JPA 2.1,Jsonp 1.0,jdbc 4.1, jndi 1.0) -->     
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>2.27</version>
        </dependency>
        
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>2.27</version>
        </dependency>
        
         <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>2.22.1</version>
        </dependency>

        <!-- junit for unit testing -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.0</version>
                <scope>test</scope>
            </dependency>
            
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.18</version>
            </dependency>
            
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-agroal</artifactId>
                <version>5.4.18.Final</version>
                <type>pom</type>
            </dependency>

    </dependencies>
    
    
    <build>
        <plugins>
            <!--Maven Plugin To packaging deployable war file to any java server--> 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.0.0</version>
                     <configuration>
                         <!-- The Web.xml deployement discriptor -->
                        <webXml>src/main/webapp/WEB-INF/web.xml</webXml> 
                        <!-- The Web Directory where your static and jsp file available -->
                        <warSourceDirectory>src/main/webapp/</warSourceDirectory>
                    </configuration>
            </plugin>
        <!--  plugin to Deploy on server  -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <configuration>
                            <tasks>
                                <copy file="target/${myprojectname}.war" tofile="${myseverpath}/${myprojectname}.war" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Server deploy plugin -->
        </plugins>
        <finalName>${myprojectname}</finalName> <!-- war file name -->
    </build>
</project>
